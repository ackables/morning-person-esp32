[1/12] Performing build step for 'bootloader'
[1/1] cd /Users/bensmith/Documents/ENGR213_214/morning-person-esp32/build/bootloader/esp-idf/esptool_py && /Users/bensmith/.espressif/python_env/idf5.4_py3.9_env/bin/python /Users/bensmith/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/bensmith/Documents/ENGR213_214/morning-person-esp32/build/bootloader/bootloader.bin
Bootloader binary size 0x6560 bytes. 0xaa0 bytes (9%) free.
[2/12] No install step for 'bootloader'
[3/12] Completed 'bootloader'
[4/12] Building C object esp-idf/routineScheduling/CMakeFiles/__idf_routineScheduling.dir/jsonParse.c.obj
[5/12] Linking C static library esp-idf/routineScheduling/libroutineScheduling.a
[6/12] Linking C static library esp-idf/main/libmain.a
[7/12] Generating ld/sections.ld
[8/12] Building C object CMakeFiles/morning_person_esp32.elf.dir/project_elf_src_esp32.c.obj
[9/12] Linking CXX executable morning_person_esp32.elf
[10/12] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/bensmith/Documents/ENGR213_214/morning-person-esp32/build/morning_person_esp32.bin
[11/12] cd /Users/bensmith/Documents/ENGR213_214/morning-person-esp32/build/esp-idf/esptool_py && /Users/bensmith/.espressif/python_env/idf5.4_py3.9_env/bin/python /Users/bensmith/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/bensmith/Documents/ENGR213_214/morning-person-esp32/build/partition_table/partition-table.bin /Users/bensmith/Documents/ENGR213_214/morning-person-esp32/build/morning_person_esp32.bin
morning_person_esp32.bin binary size 0x35900 bytes. Smallest app partition is 0x190000 bytes. 0x15a700 bytes (87%) free.
[11/12] cd /Users/bensmith/esp/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/bensmith/esp/esp-idf -D "SERIAL_TOOL=/Users/bensmith/.espressif/python_env/idf5.4_py3.9_env/bin/python;;/Users/bensmith/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/bensmith/Documents/ENGR213_214/morning-person-esp32/build -P /Users/bensmith/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/cu.wchusbserial54E20347031 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 morning_person_esp32.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/cu.wchusbserial54E20347031
Connecting....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 94:b5:55:23:60:34
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00045fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 25952 bytes to 16362...
Writing at 0x00001000... (100 %)
Wrote 25952 bytes (16362 compressed) at 0x00001000 in 0.7 seconds (effective 299.2 kbit/s)...
Hash of data verified.
Compressed 219392 bytes to 124295...
Writing at 0x00010000... (12 %)
Writing at 0x0001c910... (25 %)
Writing at 0x000225e2... (37 %)
Writing at 0x00028516... (50 %)
Writing at 0x0002df6b... (62 %)
Writing at 0x00033fca... (75 %)
Writing at 0x0003bdc0... (87 %)
Writing at 0x00041e45... (100 %)
Wrote 219392 bytes (124295 compressed) at 0x00010000 in 2.9 seconds (effective 606.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 120...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (120 compressed) at 0x00008000 in 0.1 seconds (effective 298.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
